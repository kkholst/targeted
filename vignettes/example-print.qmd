---
format:
    html:
      toc: true
---

# Custom model

```{r}
devtools::load_all(".")

ff <- function(object, newdata) newdata %*% object$coefficients
m <- ml_model$new(
  formula = y ~ x1 + x2,
  estimate = glm.fit,
  predict = ff,
  info = "some info about the model",
  predict.args = list(some_predict_arg = 1, family = gaussian(inverse)),
  some.fit.arg = "sdfsd",
  another_fit_arg = gaussian
)
```

```{r}
print(m)
```

# predictor_

## glmnet
```{r}
m <- predictor_glmnet(y ~ a * (x1 + x2))
m
```

## glm
```{r, attr.output='style="max-height: 700px;"'}
m <- predictor_glm(y ~ a * (x1 + x2))
print(m)
```

## gam
```{r, attr.output='style="max-height: 700px;"'}
m <- predictor_gam(y ~ a * (x1 + x2))
print(m)
```

## sl
sl needs some additional care
```{r, attr.output='style="max-height: 700px;"'}
m <- predictor_sl(list(
  gam = predictor_gam(y ~ a * (x1 + x2)),
  glm = predictor_glm(y ~ a * (x1 + x2))
)
)
print(m)
```

# fitted model


```{r}
sim1 <- function(n = 5e2) {
   n <- 5e2
   x1 <- rnorm(n, sd = 2)
   x2 <- rnorm(n)
   y <- x1 + cos(x1) + rnorm(n, sd = 0.5**.5)
   d <- data.frame(y, x1, x2)
   d
}
d <- sim1()
m <- predictor_glm(y ~ x1 + x2)
m
m$estimate(d)
m
```