% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictor.R
\name{predictor_sl}
\alias{predictor_sl}
\alias{superlearner}
\title{Superlearner (stacked/ensemble learner)}
\usage{
predictor_sl(
  model.list,
  info = NULL,
  nfolds = 5L,
  meta.learner = NULL,
  model.score = mse,
  ...
)
}
\arguments{
\item{model.list}{List of \link{ml_model} objects (i.e. \link{predictor_glm})}

\item{info}{Optional model description to store in model object}

\item{nfolds}{Number of folds to use in cross validation}

\item{meta.learner}{meta.learner function (default non-negative least
squares). Must be a function of the response (nx1 vector), \code{y}, and the
predictions (nxp matrix), \code{pred}.}

\item{model.score}{model scoring method (see \link{ml_model})}

\item{...}{additional argument to \code{superlearner}}
}
\description{
This function creates a predictor object (class \link{ml_model})
from a list of existing \link{ml_model} objects. When estimating this model a
stacked prediction will be created by weighting together the predictions
of each of the initial models. The weights are learned using
cross-validation.
}
\examples{
sim1 <- function(n = 5e2) {
   n <- 5e2
   x1 <- rnorm(n, sd = 2)
   x2 <- rnorm(n)
   y <- x1 + cos(x1) + rnorm(n, sd = 0.5**.5)
   d <- data.frame(y, x1, x2)
   d
}
d <- sim1() |> mets::dsort(~x1)

m <- list(
  "mean" = predictor_glm(y ~ 1),
  "glm" = predictor_glm(y ~ x1 + x2),
  "iso" = predictor_isoreg(y ~ x1)
)

s <- predictor_sl(m, nfolds=10)
s$estimate(d)
pr <- s$predict(d)
if (interactive()) {
    plot(y ~ x1, data = d)
    points(d$x1, pr, col = 2, cex = 0.5)
    lines(cos(x1) + x1 ~ x1, data = d,
          lwd = 4, col = lava::Col("darkblue", 0.3))
}
print(s)
## weights(s)
## score(s)

cvres <- summary(s, data=d, nfolds=3, rep=2)
cvres
## coef(cvres)
## score(cvres)
}
\references{
Luedtke & van der Laan (2016) Super-Learning of an Optimal
Dynamic Treatment Rule, The International Journal of Biostatistics.
}
\seealso{
ml_model predictor_glm predictor_xgboost
}
