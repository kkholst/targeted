% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/superlearner.R
\name{superlearner}
\alias{superlearner}
\title{Superlearner (stacked/ensemble learner)}
\usage{
superlearner(
  model.list,
  data,
  nfolds = 10,
  meta.learner = metalearner_nnls,
  model.score = mse,
  mc.cores = NULL,
  future.seed = TRUE,
  silent = TRUE,
  ...
)
}
\arguments{
\item{model.list}{(list) List of \link{ml_model} objects (i.e. \link{predictor_glm})}

\item{nfolds}{Number of folds to use in cross validation}

\item{meta.learner}{meta.learner function (default non-negative least
squares). Must be a function of the response (nx1 vector), \code{y}, and the
predictions (nxp matrix), \code{pred}.}

\item{model.score}{model scoring method (see \link{ml_model})}

\item{...}{Additional arguments to \link[parallel:mclapply]{parallel::mclapply} or
\link[future.apply:future_lapply]{future.apply::future_lapply}.}

\item{info}{Optional model description to store in model object}

\item{learner.args}{(list) Additional arguments to
\link[=ml_model]{ml_model$new()}.}
}
\description{
This function creates a predictor object (class \link{ml_model})
from a list of existing \link{ml_model} objects. When estimating this model a
stacked prediction will be created by weighting together the predictions
of each of the initial models. The weights are learned using
cross-validation.
}
\references{
Luedtke & van der Laan (2016) Super-Learning of an Optimal
Dynamic Treatment Rule, The International Journal of Biostatistics.
}
